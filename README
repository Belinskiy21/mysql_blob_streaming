= A blob streaming extension for the native Ruby-MySQL adaptor.

It provides the module MysqlBlobStreaming, which gives the adaptor the ability of streaming blobs right out of the MySQL database.

== Dependencies

  * Ruby-headers
  * MySQL-headers
  * Native Ruby-MySQL adaptor (http://www.tmtm.org/en/mysql/ruby)

== Installation

Install it like any other Gem:

  $ gem install mysql_blob_streaming-X.X.X.gem

Run it with root privileges if needed.

== Usage

First you need a statement object.

  require 'mysql'
  mysql = Mysql.new('localhost', 'mysqluser', 'mysqlpassword', 'testdatabase')
  stmt = mysql.prepare("SELECT data FROM blobs WHERE id = ?")

Which SQL-Statement is usefull depends on your own use case. 
You can either use an already existing statement object.

Second extend that statement with the module MysqlBlobStreaming to add the additional functionality.
To make Ruby be able to find that module you have to require RubyGems first (if you haven't done it already).
  
  # require 'rubygems'
  require 'mysql_blob_streaming'
  stmt.extend(MysqlBlobStreaming)

Now implement the callback method, which  will be used everytime a peace of data is fetched:

  def stmt.handle_data(data)
    # 'data' is the fetched data.
    # You would probably want to append it to a file.
  end

Now you are able to stream the blob. You start it with the method <code>stream(size)</code>. 
The <code>size</code> parameter specifies the buffer size in Bytes.
Following will execute the SQL-statement and stream the blob (buffer size is 1 megabyte):
  
  stmt.execute(1234)
  stmt.stream(1048576)
